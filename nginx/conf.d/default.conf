# HTTP to HTTPS redirect with SEO-friendly headers
server {
    listen 80;
    server_name aetherinc.xyz www.aetherinc.xyz;

    # SEO-friendly security headers
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;

    # Redirect to HTTPS
    location / {
        return 301 https://$host$request_uri;
    }
}

server {
    listen 443 ssl http2;
    server_name aetherinc.xyz www.aetherinc.xyz;

    # SSL configuration optimized for SEO and performance
    ssl_certificate /etc/nginx/ssl/fullchain.pem;
    ssl_certificate_key /etc/nginx/ssl/privkey.pem;
    ssl_protocols TLSv1.2 TLSv1.3;
    ssl_prefer_server_ciphers on;
    ssl_ciphers 'EECDH+AESGCM:EDH+AESGCM:AES256+EECDH:AES256+EDH';
    ssl_session_cache shared:SSL:10m;
    ssl_session_timeout 10m;

    # Security headers for SEO
    add_header X-Frame-Options "DENY" always;
    add_header X-Content-Type-Options "nosniff" always;
    add_header X-XSS-Protection "1; mode=block" always;
    add_header Referrer-Policy "strict-origin-when-cross-origin" always;
    add_header Permissions-Policy "camera=(), microphone=(), geolocation=()" always;
    add_header Strict-Transport-Security "max-age=31536000; includeSubDomains; preload" always;

    # SEO and performance headers
    add_header X-Robots-Tag "index, follow" always;

    # Proxy headers for Next.js
    proxy_set_header Host $host;
    proxy_set_header X-Real-IP $remote_addr;
    proxy_set_header X-Forwarded-For $proxy_add_x_forwarded_for;
    proxy_set_header X-Forwarded-Proto $scheme;
    proxy_set_header X-Forwarded-Host $host;
    proxy_set_header X-Forwarded-Port $server_port;

    # Main location block for Next.js with optimizations
    location / {
        proxy_pass http://web:3000;
        proxy_redirect off;
        proxy_buffering on;
        proxy_buffer_size 128k;
        proxy_buffers 4 256k;
        proxy_busy_buffers_size 256k;

        # Timeout settings for better crawler performance
        proxy_connect_timeout 30s;
        proxy_send_timeout 30s;
        proxy_read_timeout 30s;
    }

    # Sitemap with special caching for crawlers
    location /sitemap.xml {
        proxy_pass http://web:3000;
        add_header Cache-Control "public, max-age=86400" always; # 24 hours
        add_header X-Robots-Tag "index, follow" always;
    }

    # Robots.txt with special caching for crawlers
    location /robots.txt {
        proxy_pass http://web:3000;
        add_header Cache-Control "public, max-age=86400" always; # 24 hours
        add_header X-Robots-Tag "index, follow" always;
    }

    # Static file caching optimized for SEO
    location /_next/static {
        proxy_pass http://web:3000;
        add_header Cache-Control "public, max-age=31536000, immutable" always;
        add_header X-Robots-Tag "index, follow" always;
        expires 1y;
        add_header X-Content-Type-Options "nosniff" always;
    }

    location /static {
        proxy_pass http://web:3000;
        add_header Cache-Control "public, max-age=31536000, immutable" always;
        add_header X-Robots-Tag "index, follow" always;
        expires 1y;
        add_header X-Content-Type-Options "nosniff" always;
    }

    # Images and assets with SEO-friendly caching
    location ~* \.(jpg|jpeg|png|gif|ico|svg|webp)$ {
        proxy_pass http://web:3000;
        add_header Cache-Control "public, max-age=604800" always; # 7 days
        add_header X-Robots-Tag "index, follow" always;
        expires 7d;
        add_header X-Content-Type-Options "nosniff" always;
    }

    # Fonts with long-term caching
    location ~* \.(woff|woff2|ttf|eot)$ {
        proxy_pass http://web:3000;
        add_header Cache-Control "public, max-age=31536000, immutable" always;
        add_header X-Robots-Tag "index, follow" always;
        add_header Access-Control-Allow-Origin "*" always;
        expires 1y;
        add_header X-Content-Type-Options "nosniff" always;
    }

    # API endpoints with appropriate caching
    location /api/ {
        proxy_pass http://web:3000;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
        add_header X-Robots-Tag "noindex, nofollow" always;
        proxy_buffering off;
    }

    # Admin routes - noindex for SEO
    location /admin/ {
        proxy_pass http://web:3000;
        add_header X-Robots-Tag "noindex, nofollow" always;
        add_header Cache-Control "no-cache, no-store, must-revalidate" always;
    }

    # Gzip compression for better performance and SEO
    gzip on;
    gzip_vary on;
    gzip_min_length 1024;
    gzip_proxied expired no-cache no-store private must-revalidate auth;
    gzip_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/ld+json
        application/atom+xml;

    # Brotli compression (if supported)
    brotli on;
    brotli_comp_level 6;
    brotli_types
        text/plain
        text/css
        text/xml
        text/javascript
        application/javascript
        application/xml+rss
        application/json
        application/ld+json
        application/atom+xml;

    # Rate limiting for crawlers (gentle rate limiting)
    limit_req_zone $binary_remote_addr zone=crawler:10m rate=10r/s;
    limit_req_zone $binary_remote_addr zone=normal:10m rate=5r/s;

    # Apply rate limiting based on User-Agent
    location / {
        # Check if it's a known crawler
        if ($http_user_agent ~* (googlebot|bingbot|slurp|duckduckbot|yandexbot|baiduspider)) {
            limit_req zone=crawler burst=20 nodelay;
        }
        # Normal rate limiting for other requests
        limit_req zone=normal burst=10 nodelay;

        # Continue with proxy pass
        proxy_pass http://web:3000;
    }
} 