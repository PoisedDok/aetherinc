"use client";

import React, { forwardRef, useRef } from 'react';
import { cn } from "@/lib/utils";
import { AnimatedBeam } from "@/components/magicui/animated-beam";

// Icon set for the AutomationBeamDemo
const Icons = {
  notion: () => (
    <svg
      width="100"
      height="100"
      viewBox="0 0 100 100"
      fill="none"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path
        d="M6.017 4.313l55.333 -4.087c2.56 -0.19 4.78 1.73 4.97 4.293l4.087 55.333c0.19 2.56 -1.73 4.78 -4.293 4.97l-55.333 4.087c-2.56 0.19 -4.78 -1.73 -4.97 -4.293L1.723 9.283c-0.19 -2.56 1.73 -4.78 4.293 -4.97z"
        fill="#ffffff"
      />
      <path
        d="M61.35 0.227l-55.333 4.087c-2.563 0.19 -4.483 2.41 -4.293 4.97l4.087 55.333c0.19 2.563 2.41 4.483 4.97 4.293l55.333 -4.087c2.563 -0.19 4.483 -2.41 4.293 -4.97L66.32 4.52c-0.19 -2.563 -2.41 -4.483 -4.97 -4.293zM19.191 17.697c1.14 -0.084 2.253 0.114 3.307 0.577l33.235 14.507c0.444 0.186 0.72 0.637 0.694 1.119l-0.651 12.458c-0.029 0.546 -0.504 0.964 -1.048 0.922l-0.553 -0.043c-0.484 -0.038 -0.891 -0.371 -1.019 -0.837l-3.047 -11.066c-0.133 -0.483 -0.538 -0.847 -1.031 -0.924l-22.001 -3.413c-0.478 -0.074 -0.962 0.112 -1.267 0.489l-8.212 10.155c-0.33 0.408 -0.871 0.557 -1.352 0.371l-0.868 -0.334c-0.453 -0.174 -0.759 -0.607 -0.759 -1.089v-11.893c0 -0.282 0.096 -0.555 0.272 -0.773l2.176 -2.688c0.327 -0.404 0.474 -0.927 0.408 -1.446l-0.705 -5.529c-0.1 -0.783 0.421 -1.512 1.195 -1.669l1.186 -0.241c0.199 -0.04 0.398 -0.041 0.594 -0.001l0 0zM42.12 42.9l-19.616 1.448c-0.4 0.03 -0.708 0.357 -0.713 0.759l-0.085 7.116c-0.001 0.199 0.076 0.39 0.215 0.529l3.534 3.534c0.283 0.283 0.659 0.439 1.053 0.439h0.171c0.328 0 0.645 -0.119 0.891 -0.334l3.587 -3.134c0.347 -0.303 0.797 -0.46 1.257 -0.439l9.266 0.414c0.521 0.023 0.978 -0.35 1.097 -0.859l0.376 -1.619c0.109 -0.469 -0.134 -0.947 -0.573 -1.128l-0.625 -0.259c-0.286 -0.118 -0.619 -0.083 -0.874 0.093l-3.738 2.58c-0.661 0.457 -1.568 0.308 -2.048 -0.34l-0.359 -0.483c-0.265 -0.356 -0.341 -0.82 -0.204 -1.241l1.941 -5.967c0.174 -0.535 0.685 -0.891 1.249 -0.87l9.387 0.346c0.511 0.019 0.955 -0.346 1.057 -0.848l0.166 -0.822c0.082 -0.406 -0.144 -0.814 -0.529 -0.959l-5.671 -2.137z"
        fill="#000000"
        fillRule="evenodd"
        clipRule="evenodd"
      />
    </svg>
  ),
  openai: () => (
    <svg
      width="100"
      height="100"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path d="M22.2819 9.8211a5.9847 5.9847 0 0 0-.5157-4.9108 6.0462 6.0462 0 0 0-6.5098-2.9A6.0651 6.0651 0 0 0 4.9807 4.1818a5.9847 5.9847 0 0 0-3.9977 2.9 6.0462 6.0462 0 0 0 .7427 7.0966 5.98 5.98 0 0 0 .511 4.9107 6.051 6.051 0 0 0 6.5146 2.9001A5.9847 5.9847 0 0 0 13.2599 24a6.0557 6.0557 0 0 0 5.7718-4.2058 5.9894 5.9894 0 0 0 3.9977-2.9001 6.0557 6.0557 0 0 0-.7475-7.0729zm-9.022 12.6081a4.4755 4.4755 0 0 1-2.8764-1.0408l.1419-.0804 4.7783-2.7582a.7948.7948 0 0 0 .3927-.6813v-6.7369l2.02 1.1686a.071.071 0 0 1 .038.052v5.5826a4.504 4.504 0 0 1-4.4945 4.4944zm-9.6607-4.1254a4.4708 4.4708 0 0 1-.5346-3.0137l.142.0852 4.783 2.7582a.7712.7712 0 0 0 .7806 0l5.8428-3.3685v2.3324a.0804.0804 0 0 1-.0332.0615L9.74 19.9502a4.4992 4.4992 0 0 1-6.1408-1.6464zM2.3408 7.8956a4.485 4.485 0 0 1 2.3655-1.9728V11.6a.7664.7664 0 0 0 .3879.6765l5.8144 3.3543-2.0201 1.1685a.0757.0757 0 0 1-.071 0l-4.8303-2.7865A4.504 4.504 0 0 1 2.3408 7.872zm16.5963 3.8558L13.1038 8.364 15.1192 7.2a.0757.0757 0 0 1 .071 0l4.8303 2.7913a4.4944 4.4944 0 0 1-.6765 8.1042v-5.6772a.79.79 0 0 0-.407-.667zm2.0107-3.0231l-.142-.0852-4.7735-2.7818a.7759.7759 0 0 0-.7854 0L9.409 9.2297V6.8974a.0662.0662 0 0 1 .0284-.0615l4.8303-2.7866a4.4992 4.4992 0 0 1 6.6802 4.66zM8.3065 12.863l-2.02-1.1638a.0804.0804 0 0 1-.038-.0567V6.0742a4.4992 4.4992 0 0 1 7.3757-3.4537l-.142.0805L8.704 5.459a.7948.7948 0 0 0-.3927.6813zm1.0976-2.3654l2.602-1.4998 2.6069 1.4998v2.9994l-2.5974 1.5093-2.6067-1.4998z" fill="#000000"/>
    </svg>
  ),
  googleDrive: () => (
    <svg
      width="100"
      height="100"
      viewBox="0 0 87.3 78"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path d="m6.6 66.85 3.85 6.65c.8 1.4 1.95 2.5 3.3 3.3 1.4.8 2.9 1.2 4.5 1.2h51.8c1.6 0 3.1-.4 4.5-1.2 1.35-.8 2.5-1.9 3.3-3.3l3.85-6.65-75.1 0z" fill="#0066da"/>
      <path d="m43.65 0-25.9 44.85 13.2 22.8 39.1-67.65z" fill="#00ac47"/>
      <path d="m43.65 0 26.4 0-39.1 67.65 13.2-22.8z" fill="#ea4335"/>
      <path d="m81.5 66.85-13.2-22.8-13.2 22.8z" fill="#00832d"/>
      <path d="m18.55 44.05-13.2 22.8h26.4z" fill="#2684fc"/>
      <path d="m43.65 0-13.2 22.8h26.4z" fill="#ffba00"/>
    </svg>
  ),
  googleDocs: () => (
    <svg
      width="47px"
      height="65px"
      viewBox="0 0 47 65"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path d="M29.375,0 L4.40625,0 C1.98046875,0 0,1.98046875 0,4.40625 L0,60.59375 C0,63.0195312 1.98046875,65 4.40625,65 L42.59375,65 C45.0195312,65 47,63.0195312 47,60.59375 L47,17.625 L29.375,0 Z" fill="#4285F4"></path>
      <path d="M36.7188,17.625 L47,27.90625 L47,17.625 L36.7188,17.625 Z" fill="#A1C2FA"></path>
      <path d="M29.375,0 L29.375,13.2188 C29.375,15.6445312 31.3554688,17.625 33.78125,17.625 L47,17.625 L29.375,0 Z" fill="#CFDFFF"></path>
      <path d="M10.9667969,43.3378906 L10.9667969,28.2714844 L15.6035156,28.2714844 C16.8554688,28.2714844 17.8320312,28.5761719 18.5332031,29.1855469 C19.234375,29.7949219 19.5849609,30.6308594 19.5849609,31.6933594 C19.5849609,32.2597656 19.4121094,32.7675781 19.0664062,33.2167969 C18.7207031,33.6660156 18.2636719,33.9941406 17.6953125,34.2011719 C18.3652344,34.3496094 18.8916016,34.6953125 19.2744141,35.2382812 C19.6572266,35.78125 19.8486328,36.4140625 19.8486328,37.1367188 C19.8486328,38.2617188 19.4794922,39.1386719 18.7412109,39.7675781 C18.0029297,40.3964844 16.9726562,40.7109375 15.6503906,40.7109375 L10.9667969,43.3378906 Z M13.3115234,30.1660156 L13.3115234,34.0800781 L15.3398438,34.0800781 C16.0097656,34.0800781 16.5410156,33.9042969 16.9335938,33.5527344 C17.3261719,33.2011719 17.5224609,32.7128906 17.5224609,32.0878906 C17.5224609,30.8066406 16.8300781,30.1660156 15.4453125,30.1660156 L13.3115234,30.1660156 Z M13.3115234,35.9277344 L13.3115234,40.3398438 L15.7441406,40.3398438 C16.4140625,40.3398438 16.9453125,40.1503906 17.3378906,39.7714844 C17.7304688,39.3925781 17.9267578,38.8730469 17.9267578,38.2128906 C17.9267578,37.5527344 17.7275391,37.0332031 17.3291016,36.6542969 C16.9306641,36.2753906 16.3876953,36.0839844 15.7001953,36.0839844 L13.3115234,35.9277344 Z" fill="white"></path>
      <path d="M23.5,41 C22.9,41 22.4,40.8 22,40.5 C21.6,40.2 21.4,39.7 21.4,39.1 C21.4,38.5 21.6,38 22,37.7 C22.4,37.4 22.9,37.2 23.5,37.2 C24.1,37.2 24.6,37.4 25,37.7 C25.4,38 25.6,38.5 25.6,39.1 C25.6,39.7 25.4,40.2 25,40.5 C24.6,40.8 24.1,41 23.5,41 Z" fill="white"></path>
      <path d="M35.5,41 L27.5,41 C26.7,41 26,40.3 26,39.5 C26,39.2 26.1,39 26.3,38.8 L33.8,31.8 C34.1,31.5 34.3,31.3 34.4,31.1 C34.5,30.9 34.6,30.7 34.6,30.4 C34.6,30.1 34.5,29.8 34.3,29.6 C34.1,29.4 33.8,29.3 33.4,29.3 C33,29.3 32.7,29.4 32.5,29.7 C32.3,29.9 32.2,30.3 32.2,30.7 L29.9,30.7 C29.9,29.6 30.3,28.7 31,28.1 C31.7,27.5 32.6,27.2 33.6,27.2 C34.7,27.2 35.5,27.5 36.2,28 C36.8,28.5 37.1,29.2 37.1,30.1 C37.1,30.7 37,31.2 36.7,31.6 C36.4,32 36,32.5 35.5,33 L31.2,37.2 L35.5,37.2 L35.5,41 Z" fill="white"></path>
    </svg>
  ),
  whatsapp: () => (
    <svg
      width="100"
      height="100"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path fill="#25D366" d="M17.6 6.32A7.85 7.85 0 0 0 12.05 4a8.03 8.03 0 0 0-6.93 12.15L4 20l3.95-1.04a7.94 7.94 0 0 0 4.1 1.04 7.93 7.93 0 0 0 7.95-7.93 7.92 7.92 0 0 0-2.4-5.75zm-5.55 12.18a6.63 6.63 0 0 1-3.38-.92l-.24-.15-2.5.66.67-2.44-.16-.25a6.56 6.56 0 0 1-1.01-3.5 6.55 6.55 0 0 1 6.56-6.55c1.75 0 3.4.68 4.64 1.92a6.56 6.56 0 0 1 1.92 4.64 6.56 6.56 0 0 1-6.56 6.55l.06.04zm3.57-4.92c-.2-.1-1.17-.58-1.35-.64-.18-.07-.31-.1-.44.1-.13.2-.5.64-.61.77-.11.13-.23.15-.43.05a5.35 5.35 0 0 1-1.58-.98 5.9 5.9 0 0 1-1.1-1.37c-.11-.2-.01-.3.09-.4.08-.09.2-.23.3-.35.1-.12.13-.2.2-.34.07-.13.03-.25-.02-.35-.05-.1-.44-1.06-.6-1.45-.16-.38-.33-.33-.44-.33-.11 0-.24-.03-.37-.03s-.34.05-.52.25c-.18.2-.67.66-.67 1.6 0 .95.69 1.86.79 1.99.1.13 1.37 2.1 3.32 2.94l.46.2c.67.21 1.28.18 1.76.11.54-.08 1.17-.48 1.33-.94.17-.46.17-.85.12-.94-.05-.08-.18-.14-.38-.24z"/>
    </svg>
  ),
  messenger: () => (
    <svg
      width="100"
      height="100"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path fill="#0078FF" d="M12 2C6.36 2 2 6.13 2 11.7c0 2.91 1.19 5.44 3.14 7.17.16.13.26.35.27.57l.05 1.78c.02.55.6.96 1.13.82l1.99-.8c.17-.07.36-.07.53-.01.9.33 1.85.51 2.89.51 5.64 0 10-4.13 10-9.7C22 6.13 17.64 2 12 2zm5.38 7.38l-2.5 4c-.2.32-.63.42-.95.22l-2.61-1.61c-.16-.1-.37-.09-.53.02l-2.83 2.11c-.44.33-.93-.27-.63-.77l2.5-4c.2-.32.63-.42.95-.22l2.61 1.61c.16.1.37.09.53-.02l2.83-2.11c.44-.33.93.27.63.77z"/>
    </svg>
  ),
  zapier: () => (
    <svg
      width="100"
      height="100"
      viewBox="0 0 24 24"
      xmlns="http://www.w3.org/2000/svg"
    >
      <path fill="#FF4A00" d="M12 24c6.627 0 12-5.373 12-12S18.627 0 12 0 0 5.373 0 12s5.373 12 12 12z"/>
      <path fill="white" d="M12 0c6.627 0 12 5.373 12 12s-5.373 12-12 12S0 18.627 0 12 5.373 0 12 0zm-.001 2.136c-5.446 0-9.864 4.418-9.864 9.864 0 5.446 4.418 9.864 9.864 9.864 5.446 0 9.864-4.418 9.864-9.864 0-5.446-4.418-9.864-9.864-9.864zm4.018 4.739v1.186h-8.036l5.303 4.922-5.303 4.922h8.036v1.186h1.186V17.9h-8.036l5.303-4.922-5.303-4.922h8.036V6.87h-1.186v.005z"/>
    </svg>
  ),
};

// Utility circle component used by AutomationBeamDemo
const Circle = forwardRef<
  HTMLDivElement,
  { className?: string; children?: React.ReactNode }
>(({ className, children }, ref) => {
  return (
    <div
      ref={ref}
      className={cn(
        "z-10 flex size-12 items-center justify-center rounded-full border-2 bg-white p-3 shadow-[0_0_20px_-12px_rgba(0,0,0,0.8)]",
        className
      )}
    >
      {children}
    </div>
  );
});
Circle.displayName = "Circle";

export default function AutomationBeamDemo() {
  const containerRef = useRef<HTMLDivElement>(null!);
  const div1Ref = useRef<HTMLDivElement>(null!);
  const div2Ref = useRef<HTMLDivElement>(null!);
  const div3Ref = useRef<HTMLDivElement>(null!);
  const div4Ref = useRef<HTMLDivElement>(null!);
  const div5Ref = useRef<HTMLDivElement>(null!);
  const div6Ref = useRef<HTMLDivElement>(null!);
  const div7Ref = useRef<HTMLDivElement>(null!);

  return (
    <div
      className="relative flex h-[300px] w-full items-center justify-center overflow-hidden p-10"
      ref={containerRef}
    >
      <div className="flex size-full max-h-[200px] max-w-lg flex-col items-stretch justify-between gap-10">
        <div className="flex flex-row items-center justify-between">
          <Circle ref={div1Ref}>
            <Icons.googleDrive />
          </Circle>
          <Circle ref={div5Ref}>
            <Icons.googleDocs />
          </Circle>
        </div>
        <div className="flex flex-row items-center justify-between">
          <Circle ref={div2Ref}>
            <Icons.notion />
          </Circle>
          <Circle ref={div4Ref} className="size-16">
            <Icons.openai />
          </Circle>
          <Circle ref={div6Ref}>
            <Icons.zapier />
          </Circle>
        </div>
        <div className="flex flex-row items-center justify-between">
          <Circle ref={div3Ref}>
            <Icons.whatsapp />
          </Circle>
          <Circle ref={div7Ref}>
            <Icons.messenger />
          </Circle>
        </div>
      </div>

      {/* Animated beams connecting circles */}
      <AnimatedBeam
        containerRef={containerRef}
        fromRef={div1Ref}
        toRef={div4Ref}
        curvature={-75}
        endYOffset={-10}
      />
      <AnimatedBeam
        containerRef={containerRef}
        fromRef={div2Ref}
        toRef={div4Ref}
      />
      <AnimatedBeam
        containerRef={containerRef}
        fromRef={div3Ref}
        toRef={div4Ref}
        curvature={75}
        endYOffset={10}
      />
      <AnimatedBeam
        containerRef={containerRef}
        fromRef={div5Ref}
        toRef={div4Ref}
        curvature={-75}
        endYOffset={-10}
        reverse
      />
      <AnimatedBeam
        containerRef={containerRef}
        fromRef={div6Ref}
        toRef={div4Ref}
        reverse
      />
      <AnimatedBeam
        containerRef={containerRef}
        fromRef={div7Ref}
        toRef={div4Ref}
        curvature={75}
        endYOffset={10}
        reverse
      />
    </div>
  );
} 