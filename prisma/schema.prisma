// This is your Prisma schema file,
// learn more about it in the docs: https://pris.ly/d/prisma-schema

generator client {
  provider        = "prisma-client-js"
  // previewFeatures = ["tracing"]
}

datasource db {
  provider = "postgresql"
  url      = env("DATABASE_URL")
}

model User {
  id        String   @id @default(cuid())
  email     String   @unique
  username  String   @unique
  password  String
  role      String   @default("ADMIN")
  createdAt DateTime @default(now())
  updatedAt DateTime @updatedAt

  @@map("users")
}

model WaitlistEntry {
  id          String   @id @default(cuid())
  name        String
  email       String   @unique
  reason      String?
  useCase     String?
  earlyAccess Boolean  @default(false)
  ip          String?
  status      String   @default("PENDING")
  createdAt   DateTime @default(now())
  updatedAt   DateTime @updatedAt

  @@map("waitlist_entries")
}

model AITool {
  id          String     @id @default(cuid())
  name        String
  category    String
  type        String
  license     String?
  description String
  url         String
  pricing     String?
  isActive    Boolean    @default(true)
  createdAt   DateTime   @default(now())
  updatedAt   DateTime   @updatedAt

  @@map("ai_tools")
}

model NewsArticle {
  id          String      @id @default(cuid())
  title       String
  content     String
  excerpt     String?
  author      String?
  source      String?
  sourceUrl   String?
  imageUrl    String?
  category    String      @default("AI_NEWS")
  isPublished Boolean     @default(false)
  publishedAt DateTime?
  createdAt   DateTime    @default(now())
  updatedAt   DateTime    @updatedAt

  @@map("news_articles")
}

model ContactForm {
  id          String         @id @default(cuid())
  name        String
  email       String
  company     String?
  phone       String?
  message     String
  serviceType String?
  status      String         @default("NEW")
  createdAt   DateTime       @default(now())
  updatedAt   DateTime       @updatedAt

  @@map("contact_forms")
}

model Analytics {
  id          String   @id @default(cuid())
  page        String
  visitors    String   @default("{}")
  pageViews   Int      @default(0)
  uniqueViews Int      @default(0)
  date        DateTime @default(now())
  
  @@unique([page, date])
  @@map("analytics")
}

model AnalyticsEvent {
  id          String   @id @default(cuid())
  eventType   String   // 'click', 'hover', 'submit', etc.
  elementId   String   // Button/element identifier
  elementName String?  // Human-readable name
  page        String   // Page where event occurred
  count       Int      @default(0)
  date        DateTime @default(now())
  
  @@unique([eventType, elementId, page, date])
  @@map("analytics_events")
} 